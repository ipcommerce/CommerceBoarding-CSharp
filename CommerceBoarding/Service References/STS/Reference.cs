//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace STS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PingResponse", Namespace="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/External")]
    [System.SerializableAttribute()]
    public partial class PingResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.SecurityDomainNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.SecurityDomainNotSpecifiedFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.SecurityDomainRequirementFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.AuthenticationFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.SystemFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.InvalidTokenFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.ExpiredTokenFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.ClaimMappingsNotFoundFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(STS.AuthorizationFault))]
    public partial class BaseFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProblemTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorID {
            get {
                return this.ErrorIDField;
            }
            set {
                if ((this.ErrorIDField.Equals(value) != true)) {
                    this.ErrorIDField = value;
                    this.RaisePropertyChanged("ErrorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpURL {
            get {
                return this.HelpURLField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpURLField, value) != true)) {
                    this.HelpURLField = value;
                    this.RaisePropertyChanged("HelpURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemType {
            get {
                return this.ProblemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemTypeField, value) != true)) {
                    this.ProblemTypeField = value;
                    this.RaisePropertyChanged("ProblemType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityDomainNotFoundFault", Namespace="http://schemas.ipcommerce.com/Identity/2.0/")]
    [System.SerializableAttribute()]
    public partial class SecurityDomainNotFoundFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityDomainNotSpecifiedFault", Namespace="http://schemas.ipcommerce.com/Identity/2.0/")]
    [System.SerializableAttribute()]
    public partial class SecurityDomainNotSpecifiedFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityDomainRequirementFault", Namespace="http://schemas.ipcommerce.com/Identity/2.0/")]
    [System.SerializableAttribute()]
    public partial class SecurityDomainRequirementFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class AuthenticationFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class SystemFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class InvalidTokenFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class ExpiredTokenFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimMappingsNotFoundFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class ClaimMappingsNotFoundFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class AuthorizationFault : STS.BaseFault {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimMetaData", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
    [System.SerializableAttribute()]
    public partial class ClaimMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimNsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfidentialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimDescription {
            get {
                return this.ClaimDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimDescriptionField, value) != true)) {
                    this.ClaimDescriptionField = value;
                    this.RaisePropertyChanged("ClaimDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimGuid {
            get {
                return this.ClaimGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimGuidField, value) != true)) {
                    this.ClaimGuidField = value;
                    this.RaisePropertyChanged("ClaimGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimNs {
            get {
                return this.ClaimNsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimNsField, value) != true)) {
                    this.ClaimNsField = value;
                    this.RaisePropertyChanged("ClaimNs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimValue {
            get {
                return this.ClaimValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimValueField, value) != true)) {
                    this.ClaimValueField = value;
                    this.RaisePropertyChanged("ClaimValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confidential {
            get {
                return this.ConfidentialField;
            }
            set {
                if ((this.ConfidentialField.Equals(value) != true)) {
                    this.ConfidentialField = value;
                    this.RaisePropertyChanged("Confidential");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.ipcommerce.com/Identity/2.0/", ConfigurationName="STS.ITokenCredSignOnService")]
    public interface ITokenCredSignOnService {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common) of message PingRequest does not match the default value (http://schemas.ipcommerce.com/Identity/2.0/)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingS" +
            "tandardOperations/Ping", ReplyAction="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingS" +
            "tandardOperations/PingResponse")]
        STS.PingResponse1 Ping(STS.PingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/OpenSignOn", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnAutho" +
            "rizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnAuthe" +
            "nticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string OpenSignOn(string secret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/OpenSignOnToSecurityDomains", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnToSec" +
            "urityDomainsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SecurityDomainNotFoundFault), Action="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnToSec" +
            "urityDomainsSecurityDomainNotFoundFaultFault", Name="SecurityDomainNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnToSec" +
            "urityDomainsAuthenticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/IOpenCredSignOnService/OpenSignOnToSec" +
            "urityDomainsAuthorizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string OpenSignOnToSecurityDomains(string secret, string[] securityDomainNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/SignOnAndAddClaims", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SystemFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsSystemFaultFault", Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.InvalidTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsInvalidTokenFaultFault", Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ExpiredTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsExpiredTokenFaultFault", Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsAuthorizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ClaimMappingsNotFoundFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsClaimMappingsNotFoundFaultFault", Name="ClaimMappingsNotFoundFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAndAddCl" +
            "aimsAuthenticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string SignOnAndAddClaims(string identityToken, STS.ClaimMetaData[] claims);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/DelegatedSignOn", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ClaimMappingsNotFoundFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nClaimMappingsNotFoundFaultFault", Name="ClaimMappingsNotFoundFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nAuthorizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nAuthenticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SystemFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nSystemFaultFault", Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ExpiredTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nExpiredTokenFaultFault", Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.InvalidTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nInvalidTokenFaultFault", Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string DelegatedSignOn(string identityToken, string onBehalfOfSk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/DelegatedSignOnWithClaims", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsAuthorizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ClaimMappingsNotFoundFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsClaimMappingsNotFoundFaultFault", Name="ClaimMappingsNotFoundFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsAuthenticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SystemFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsSystemFaultFault", Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.InvalidTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsInvalidTokenFaultFault", Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ExpiredTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/DelegatedSignO" +
            "nWithClaimsExpiredTokenFaultFault", Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string DelegatedSignOnWithClaims(string identityToken, string onBehalfOfSk, STS.ClaimMetaData[] claims);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/SignOn", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ExpiredTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnExpiredT" +
            "okenFaultFault", Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAuthenti" +
            "cationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.InvalidTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnInvalidT" +
            "okenFaultFault", Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SystemFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnSystemFa" +
            "ultFault", Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnAuthoriz" +
            "ationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string SignOn(string identityToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.ipcommerce.com/Identity/2.0/TokenCred/SignOnToSecurityDomains", ReplyAction="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthenticationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsAuthenticationFaultFault", Name="AuthenticationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.InvalidTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsInvalidTokenFaultFault", Name="InvalidTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.AuthorizationFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsAuthorizationFaultFault", Name="AuthorizationFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SecurityDomainNotSpecifiedFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsSecurityDomainNotSpecifiedFaultFault", Name="SecurityDomainNotSpecifiedFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SecurityDomainNotFoundFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsSecurityDomainNotFoundFaultFault", Name="SecurityDomainNotFoundFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SecurityDomainRequirementFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsSecurityDomainRequirementFaultFault", Name="SecurityDomainRequirementFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.SystemFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsSystemFaultFault", Name="SystemFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        [System.ServiceModel.FaultContractAttribute(typeof(STS.ExpiredTokenFault), Action="http://schemas.ipcommerce.com/Identity/2.0/ITokenCredSignOnService/SignOnToSecuri" +
            "tyDomainsExpiredTokenFaultFault", Name="ExpiredTokenFault", Namespace="http://schemas.ipcommerce.com/Identity/1.0/")]
        string SignOnToSecurityDomains(string identityToken, bool issueSingleUseArtifact, string[] securityDomainNames);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Ping", WrapperNamespace="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", IsWrapped=true)]
    public partial class PingRequest {
        
        public PingRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PingResponse", WrapperNamespace="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", IsWrapped=true)]
    public partial class PingResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", Order=0)]
        public STS.PingResponse PingResult;
        
        public PingResponse1() {
        }
        
        public PingResponse1(STS.PingResponse PingResult) {
            this.PingResult = PingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITokenCredSignOnServiceChannel : STS.ITokenCredSignOnService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenCredSignOnServiceClient : System.ServiceModel.ClientBase<STS.ITokenCredSignOnService>, STS.ITokenCredSignOnService {
        
        public TokenCredSignOnServiceClient() {
        }
        
        public TokenCredSignOnServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenCredSignOnServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenCredSignOnServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenCredSignOnServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        STS.PingResponse1 STS.ITokenCredSignOnService.Ping(STS.PingRequest request) {
            return base.Channel.Ping(request);
        }
        
        public STS.PingResponse Ping() {
            STS.PingRequest inValue = new STS.PingRequest();
            STS.PingResponse1 retVal = ((STS.ITokenCredSignOnService)(this)).Ping(inValue);
            return retVal.PingResult;
        }
        
        public string OpenSignOn(string secret) {
            return base.Channel.OpenSignOn(secret);
        }
        
        public string OpenSignOnToSecurityDomains(string secret, string[] securityDomainNames) {
            return base.Channel.OpenSignOnToSecurityDomains(secret, securityDomainNames);
        }
        
        public string SignOnAndAddClaims(string identityToken, STS.ClaimMetaData[] claims) {
            return base.Channel.SignOnAndAddClaims(identityToken, claims);
        }
        
        public string DelegatedSignOn(string identityToken, string onBehalfOfSk) {
            return base.Channel.DelegatedSignOn(identityToken, onBehalfOfSk);
        }
        
        public string DelegatedSignOnWithClaims(string identityToken, string onBehalfOfSk, STS.ClaimMetaData[] claims) {
            return base.Channel.DelegatedSignOnWithClaims(identityToken, onBehalfOfSk, claims);
        }
        
        public string SignOn(string identityToken) {
            return base.Channel.SignOn(identityToken);
        }
        
        public string SignOnToSecurityDomains(string identityToken, bool issueSingleUseArtifact, string[] securityDomainNames) {
            return base.Channel.SignOnToSecurityDomains(identityToken, issueSingleUseArtifact, securityDomainNames);
        }
    }
}
